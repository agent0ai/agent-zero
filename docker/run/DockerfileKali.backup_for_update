# Use the latest slim version of Kali Linux
FROM kalilinux/kali-rolling

# Check if the argument is provided, else throw an error
ARG BRANCH
RUN if [ -z "$BRANCH" ]; then echo "ERROR: BRANCH is not set!" >&2; exit 1; fi
ENV BRANCH=$BRANCH

# Set locale to en_US.UTF-8 and timezone to UTC
# Install openssh-server here as well and create its run directory
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y locales tzdata openssh-server && \
    mkdir -p /var/run/sshd && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN sed -i -e 's/# \(en_US\.UTF-8 .*\)/\1/' /etc/locale.gen && \
    dpkg-reconfigure --frontend=noninteractive locales && \
    update-locale LANG=en_US.UTF-8 LANGUAGE=en_US:en LC_ALL=en_US.UTF-8
RUN ln -sf /usr/share/zoneinfo/UTC /etc/localtime
RUN echo "UTC" > /etc/timezone
RUN dpkg-reconfigure -f noninteractive tzdata

# Configure SSH to listen on port 2222 and on all interfaces
# Also ensure PermitRootLogin is enabled if Agent-Zero needs to SSH as root for RFC.
# Depending on Agent-Zero's RFC auth, PasswordAuthentication might also be needed.
# These are common settings for SSH in Docker for programmatic access.
RUN if [ -f /etc/ssh/sshd_config ]; then \
        sed -i 's/^#*Port 22/Port 2222/' /etc/ssh/sshd_config && \
        echo "ListenAddress 0.0.0.0" >> /etc/ssh/sshd_config && \
        echo "PermitRootLogin yes" >> /etc/ssh/sshd_config && \
        echo "PasswordAuthentication yes" >> /etc/ssh/sshd_config; \
    else \
        echo "Warning: /etc/ssh/sshd_config not found, cannot configure SSH."; \
    fi

ENV LANG=en_US.UTF-8
ENV LANGUAGE=en_US:en
ENV LC_ALL=en_US.UTF-8
ENV TZ=UTC

# Copy contents of the project's fs directory (from docker/run/fs) into image root
# This is correct because docker-compose context is now '.' (the docker/run directory)
COPY ./fs/ /

# pre installation steps
RUN bash /ins/pre_install_kali.sh $BRANCH

# install A0
RUN bash /ins/install_A0.sh $BRANCH

# install additional software
RUN bash /ins/install_additional.sh $BRANCH

# cleanup repo and install A0 without caching, this speeds up builds
ARG CACHE_DATE=none
RUN echo "cache buster $CACHE_DATE" && bash /ins/install_A02.sh $BRANCH

# post installation steps
RUN bash /ins/post_install.sh $BRANCH

# Expose new SSH port 2222 and HTTP port 80
EXPOSE 2222 80

RUN chmod +x /exe/initialize.sh /exe/run_A0.sh /exe/run_searxng.sh /exe/run_tunnel_api.sh

# initialize runtime and switch to supervisord
# IMPORTANT: Your /exe/initialize.sh script (or whatever manages services, e.g., supervisord)
# MUST be configured to start the sshd service, and it will now use port 2222.
CMD ["/exe/initialize.sh", "$BRANCH"]
